#!/bin/bash
# This is a blank bash script document.
# Put your code below this line.
# Check if script has been run as root.
if [[ ! "$USER" = "root" ]]; then
	echo "This script must be run as root!"
	exit
fi
echo
echo "Running script wipe-partition. If you wish to bypass type 'n'."
echo
sleep 1
$HOME/scripts/wipe-partition
if [[ -d /mnt/deb-inst ]]; then
	echo
	echo "Removing previous install directory /mnt/deb-inst. . ."
	echo
	sleep 1
	rm -rf /mnt/deb-inst
fi

echo
echo "Making directories. . ."
echo
sleep 1
cd /
if [[ ! -d /mnt ]]; then
	mkdir /mnt
fi
if [[ ! -d /mnt/deb-inst ]]; then
	mkdir /mnt/deb-inst
fi
if [[ ! -d /mnt/deb-inst/work ]]; then
	mkdir /mnt/deb-inst/work
fi
cd /mnt/deb-inst/work

echo
echo "Downloading debootstrap. . ."
echo
sleep 1
DEBOOT_STRP=$(wget -qO- http://ftp.debian.org/debian/pool/main/d/debootstrap | grep "all.deb" | sort -V | tail -1 | sed -e 's:.*a href="::' -e 's:.>.*::' )
wget http://ftp.debian.org/debian/pool/main/d/debootstrap/"$DEBOOT_STRP"

cd /
dpkg -i /mnt/deb-inst/work/*.deb

echo
lsblk
echo
read -p "Enter partition to configure(/dev/sdb): " part_conf
sleep 1
cfdisk $part_conf
echo
lsblk
echo
echo "Now you need to format earch partition as ext4. A new terminal will open and for each partition type 'sudo mkfs -t -L \"label\" ext4 /dev/sdXY. Then type exit to close the terminal and continue the install process."
sleep 5
/usr/bin/mate-terminal -e "bash -c \"echo; echo; lsblk; echo; echo 'Type exit when done'; echo; sh\""
echo

lsblk
echo
read -p "Enter partition name to install to(ex. /dev/sdb1): " part_name
sleep 1
umount $part_name
umount $part_conf
mount $part_name /mnt/deb-inst

debootstrap --arch amd64 testing /mnt/deb-inst http://ftp.us.debian.org/debian/
echo
echo "Mounting system folders and copying /etc files for internet connection. . ."
echo
sleep 1
mount -t proc /proc /mnt/deb-inst/proc
mount -t sysfs /sys /mnt/deb-inst/sys
mount -o bind /dev /mnt/deb-inst/dev
mount -o bind /dev/pts /mnt/deb-inst/dev/pts

cp /etc/network/interfaces /mnt/deb-inst/etc/network/interfaces
cp /etc/resolv.conf /mnt/deb-inst/etc/resolv.conf
cp /etc/hosts /mnt/deb-inst/etc/hosts
cp /etc/hostname /mnt/deb-inst/etc/hostname
cp /etc/apt/sources.list /mnt/deb-inst/etc/apt/sources.list
nano /mnt/deb-inst/etc/apt/sources.list
cp /home/msifland/scripts/debian-install-continue /mnt/deb-inst/debian-install-continue

echo
echo "Chroot'ing into new install to finish the process. . ."
echo
sleep 1
part_name="$part_name"
cat << EOF | part_name=$part_name chroot /mnt/deb-inst env /bin/bash
source /debian-install-continue
EOF
sudo rm -rf /mnt/deb-inst/debian-install-continue
sudo nano /mnt/deb-inst/etc/apt/sources.list

echo
read -p "What partition would you like to install grub to? Debian install was to $part_name(ex. /dev/sdb). " grb_inst
sudo grub-install $grb_inst
sudo update-grub $grb_inst

echo
read -p "Opening /etc/fstab to review and manually make changes. Root partition and cdrom partition have been added already in most cases. Check to make sure it's right. Showing you the UUID's for any partitions to add, eg. /home, /usr, /var, etc. Be sure to remove the \" after 'UUID='. All partition formatting should be pretty much the same, with the exception of the last number. Root partition should be a '1', others should be a '2'.(Press [ENTER] to continue) "
echo
echo
sudo blkid
/usr/bin/mate-terminal -e "bash -c \"sudo nano /mnt/deb-inst/etc/fstab\""
read -p "If separate /home partition, would you like to setup now[y/n]? " sep_hm
sleep 1
if [[ $sep_hm =~ ^([yY][eE][sS]|[yY])$ ]]; then
	read -p "What is the home partition(ex. /dev/sdb2)? " hm_prt
	sudo mkdir /mnt/deb-inst/temp
	sudo mkdir /mnt/deb-inst/temp/home
	sudo mount $hm_prt /mnt/deb-inst/temp/home
	sudo cp -rf /mnt/deb-inst/home/* /mnt/deb-inst/temp/home/
	sudo rm -rf /mnt/deb-inst/home/*
	sudo umount /mnt/deb-inst/temp/home
	sudo mount $hm_prt /mnt/deb-inst/home	
fi

echo
read -p "Re-type the username you used to setup during the install: " usrnme
echo
sleep 1
read -p "Would you like to install you personal files for this installation[y/n]? " per_fls
sleep 1
if [[ "$per_fls" =~ ^([yY][eE][sS]|[yY])$ ]]; then
	cp -rf $HOME/Documents /mnt/deb-inst/home/$usrnme/
	cp -rf $HOME/"Modules&Apps" /mnt/deb-inst/home/$usrnme/
	cp -rf $HOME/pkg_bkups /mnt/deb-inst/home/$usrnme/
	cp -rf $HOME/Projects /mnt/deb-inst/home/$usrnme/
	cp -rf $HOME/scripts /mnt/deb-inst/home/$usrnme/
	cp -rf $HOME/.oh-my-zsh /mnt/deb-inst/home/$usrnme/
	cp -rf $HOME/.config /mnt/deb-inst/home/$usrnme/
	cp -rf $HOME/.local /mnt/deb-inst/home/$usrnme/
fi
echo
read -p "Would you like to copy your personal bash and zsh files for this installation[y/n]? " cpy_sh
if [[ "$cpy_sh" =~ ^([yY][eE][sS]|[yY])$ ]]; then
	cp -rf $HOME/.zshrc /mnt/deb-inst/home/$usrnme/
	cp -rf $HOME/.bashrc /mnt/deb-inst/home/$usrnme/
fi
sleep 1
sudo chown -R $usrnme:$usrnme /mnt/deb-inst/home/*
echo
echo "Attempting to umount devices and system files. . ."
echo
sleep 1

sudo umount /mnt/deb-inst/proc
sudo umount /mnt/deb-inst/sys
sudo umount /mnt/deb-inst/dev/pts
sudo umount /mnt/deb-inst/dev
sudo umount /mnt/deb-inst

echo
echo "All done."
echo
sleep 1
exit
