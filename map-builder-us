#!/bin/bash

echo
echo "${ILCOLOR1}This scripts builds a US Map with buildings(xgarmin-buildings.typ) for your GarminDrive device. . .${ILRESTORE}"
sleep 1


TYP_FILE="xgarmin-buildings"
DEVICE="/media/msifland/GARMIN"

# Check dependencies and download latest versions of mkgmap and mkgmap-splitter
sleep 1
echo
echo "${ILCOLOR1}Downloading latest version of mkgmap and mkgmap-splitter. . .${ILRESTORE}"
echo
$HOME/scripts/mkgmap-check
echo
echo
$HOME/scripts/mkgmap-splitter-check
echo
echo
echo "${ILCOLOR1}Checking dependencies for osmimum-tool and python3-pyosmium. . .${ILRESTORE}"
echo
if ! dpkg --get-selections | grep -q "osmium-tool"; then
	echo "spike" | sudo -S apt install osmium-tool
else
	echo
	echo "osmium-tool already installed."
fi
echo
sleep 1
if ! dpkg --get-selections | grep -q "python3-pyosmium"; then
	echo "spike" | sudo -S apt install python3-pyosmium
else
	echo
	echo "python3-pyosmium already installed."
fi
echo
sleep 1

### Log date and time
DATE_START=$(date +"%s")
echo "Build Start Time:"
DATE=$(date +"%m-%d-%y")
echo "Date: $DATE"
TIME=$(date +"%r")
echo "Time: $TIME"
echo
sleep 1

function us-south-build(){
# Create directories if they don't exist.
if [[ ! -d "$HOME/maps" ]]; then
	mkdir "$HOME/maps"
fi
if [[ ! -d "$HOME/maps/combine" ]]; then
	mkdir "$HOME/maps/combine"
else
	rm -rf $HOME/maps/combine/*
fi
if [[ ! -d "$HOME/maps/downloads" ]]; then
	mkdir "$HOME/maps/downloads"
else
	rm -rf $HOME/maps/downloads/*
fi
if [[ ! -d "$HOME/maps/completed_maps" ]]; then
	mkdir "$HOME/maps/completed_maps"
fi
cd $HOME/maps

echo
echo "Building us-south. . ."
STATE="us-south"
sleep 1

echo "Running with $TyP_FILE for Garmin Drive device which includes buildings. . ."
sleep 1

echo
echo "${ILCOLOR1}Starting process of downloading and building Garmin map of Geofarik maps:${ILRESTORE} "$STATE
sleep 1

URL="http://download.geofabrik.de/north-america/"
wget -O $HOME/maps/downloads/"$STATE"_latest.osm.pbf $URL/$STATE-latest.osm.pbf
cd $HOME/maps/combine

#This is with not converting to .o5m
mv $HOME/maps/downloads/"$STATE"_latest.osm.pbf $HOME/maps/combine/"$STATE"_latest.osm.pbf
java -jar $HOME/maps/splitter/splitter.jar $HOME/maps/combine/"$STATE"_latest.osm.pbf --max-nodes=800000 --output=xml

echo
echo "${ILCOLOR1}Creating img, this will take a while...${ILRESTORE}"
sleep 1
java -jar $HOME/maps/mkgmap/mkgmap.jar --style-file=$HOME/maps/styles/mine  --family-id=2000 --route --gmapsupp *.osm.gz $HOME/maps/"$TYP_FILE".typ

echo

if [[ -f $HOME/maps/combine/gmapsupp.img ]]; then
	echo
	echo "${ILCOLOR1}Moving gmapsupp.img to completed_maps folder and renaming to $STATE_gmapsupp.img...${ILRESTORE}"
	sleep 1
	if [[ -f $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old ]]; then
		rm -rf $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old
	fi
	if [[ -f "$HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img" ]]; then
		mv $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old
	fi
	mv $HOME/maps/combine/gmapsupp.img $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img
	sleep 1

	echo
	echo "${ILCOLOR1}Checking for Garmin Device. . .${ILRESTORE}"
	sleep 1
	if [[ -d $DEVICE ]]; then
		echo "Garming device found. . ."
		echo
		sleep 1
		if [[ -f "$DEVICE"/Garmin/"$STATE"_latest_gmapsupp.img ]];then
			echo "${ILCOLOR1}Removing old map from device. . .${ILRESTORE}"
			rm -rf "$DEVICE"/Garmin/"$STATE"_latest_gmapsupp.img
			echo
			sleep 1
		fi
		echo "${ILCOLOR1}Copying new map to Garmin device. . .${ILRESTORE}"
		rsync --progress --verbose $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img /media/msifland/GARMIN/Garmin/"$STATE"-latest_gmapsupp.img
	else
		echo
		echo "${ILCOLOR1}No Garmin Device found. Copy manually later.${ILRESTORE}"
	fi
	# Cleaan up files only if a gmap image was created. Keep for troublshooting if .img was NOT created.
	echo
	echo "${ILCOLOR1}Cleaning up files. . .${ILRESTORE}"
	sleep 1
	rm -rf $HOME/maps/combine/*
	rm -rf $HOME/maps/downloads/*
else
		echo
		echo "${ILCOLOR1}No map file was created, check for errors...${ILRESTORE}"
fi
}

function us-midwest-build(){
# Create directories if they don't exist.
if [[ ! -d "$HOME/maps" ]]; then
	mkdir "$HOME/maps"
fi
if [[ ! -d "$HOME/maps/combine" ]]; then
	mkdir "$HOME/maps/combine"
else
	rm -rf $HOME/maps/combine/*
fi
if [[ ! -d "$HOME/maps/downloads" ]]; then
	mkdir "$HOME/maps/downloads"
else
	rm -rf $HOME/maps/downloads/*
fi
if [[ ! -d "$HOME/maps/completed_maps" ]]; then
	mkdir "$HOME/maps/completed_maps"
fi
cd $HOME/maps

echo
echo "Building us-midwest. . ."
STATE="us-midwest"
sleep 1

echo "Running with $TyP_FILE for Garmin Drive device which includes buildings. . ."
sleep 1

echo
echo "${ILCOLOR1}Starting process of downloading and building Garmin map of Geofarik maps:${ILRESTORE} "$STATE
sleep 1

URL="http://download.geofabrik.de/north-america/"
wget -O $HOME/maps/downloads/"$STATE"_latest.osm.pbf $URL/$STATE-latest.osm.pbf
cd $HOME/maps/combine

#This is with not converting to .o5m
mv $HOME/maps/downloads/"$STATE"_latest.osm.pbf $HOME/maps/combine/"$STATE"_latest.osm.pbf
java -jar $HOME/maps/splitter/splitter.jar $HOME/maps/combine/"$STATE"_latest.osm.pbf --max-nodes=800000 --output=xml

echo
echo "${ILCOLOR1}Creating img, this will take a while...${ILRESTORE}"
sleep 1
java -jar $HOME/maps/mkgmap/mkgmap.jar --style-file=$HOME/maps/styles/mine  --family-id=2000 --route --gmapsupp *.osm.gz $HOME/maps/"$TYP_FILE".typ

echo

if [[ -f $HOME/maps/combine/gmapsupp.img ]]; then
	echo
	echo "${ILCOLOR1}Moving gmapsupp.img to completed_maps folder and renaming to $STATE_gmapsupp.img...${ILRESTORE}"
	sleep 1
	if [[ -f $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old ]]; then
		rm -rf $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old
	fi
	if [[ -f "$HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img" ]]; then
		mv $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old
	fi
	mv $HOME/maps/combine/gmapsupp.img $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img
	sleep 1

	echo
	echo "${ILCOLOR1}Checking for Garmin Device. . .${ILRESTORE}"
	sleep 1
	if [[ -d $DEVICE ]]; then
		echo "Garming device found. . ."
		echo
		sleep 1
		if [[ -f "$DEVICE"/Garmin/"$STATE"_latest_gmapsupp.img ]];then
			echo "${ILCOLOR1}Removing old map from device. . .${ILRESTORE}"
			rm -rf "$DEVICE"/Garmin/"$STATE"_latest_gmapsupp.img
			echo
			sleep 1
		fi
		echo "${ILCOLOR1}Copying new map to Garmin device. . .${ILRESTORE}"
		rsync --progress --verbose $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img /media/msifland/GARMIN/Garmin/"$STATE"-latest_gmapsupp.img
	else
		echo
		echo "${ILCOLOR1}No Garmin Device found. Copy manually later.${ILRESTORE}"
	fi
	# Cleaan up files only if a gmap image was created. Keep for troublshooting if .img was NOT created.
	echo
	echo "${ILCOLOR1}Cleaning up files. . .${ILRESTORE}"
	sleep 1
	rm -rf $HOME/maps/combine/*
	rm -rf $HOME/maps/downloads/*
else
		echo
		echo "${ILCOLOR1}No map file was created, check for errors...${ILRESTORE}"
fi
}

function us-northeast-build(){
# Create directories if they don't exist.
if [[ ! -d "$HOME/maps" ]]; then
	mkdir "$HOME/maps"
fi
if [[ ! -d "$HOME/maps/combine" ]]; then
	mkdir "$HOME/maps/combine"
else
	rm -rf $HOME/maps/combine/*
fi
if [[ ! -d "$HOME/maps/downloads" ]]; then
	mkdir "$HOME/maps/downloads"
else
	rm -rf $HOME/maps/downloads/*
fi
if [[ ! -d "$HOME/maps/completed_maps" ]]; then
	mkdir "$HOME/maps/completed_maps"
fi
cd $HOME/maps

echo
echo "Building us-northeast. . ."
STATE="us-northeast"
sleep 1

echo "Running with $TyP_FILE for Garmin Drive device which includes buildings. . ."
sleep 1

echo
echo "${ILCOLOR1}Starting process of downloading and building Garmin map of Geofarik maps:${ILRESTORE} "$STATE
sleep 1

URL="http://download.geofabrik.de/north-america/"
wget -O $HOME/maps/downloads/"$STATE"_latest.osm.pbf $URL/$STATE-latest.osm.pbf
cd $HOME/maps/combine

#This is with not converting to .o5m
mv $HOME/maps/downloads/"$STATE"_latest.osm.pbf $HOME/maps/combine/"$STATE"_latest.osm.pbf
java -jar $HOME/maps/splitter/splitter.jar $HOME/maps/combine/"$STATE"_latest.osm.pbf --max-nodes=800000 --output=xml

echo
echo "${ILCOLOR1}Creating img, this will take a while...${ILRESTORE}"
sleep 1
java -jar $HOME/maps/mkgmap/mkgmap.jar --style-file=$HOME/maps/styles/mine  --family-id=2000 --route --gmapsupp *.osm.gz $HOME/maps/"$TYP_FILE".typ

echo

if [[ -f $HOME/maps/combine/gmapsupp.img ]]; then
	echo
	echo "${ILCOLOR1}Moving gmapsupp.img to completed_maps folder and renaming to $STATE_gmapsupp.img...${ILRESTORE}"
	sleep 1
	if [[ -f $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old ]]; then
		rm -rf $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old
	fi
	if [[ -f "$HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img" ]]; then
		mv $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old
	fi
	mv $HOME/maps/combine/gmapsupp.img $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img
	sleep 1

	echo
	echo "${ILCOLOR1}Checking for Garmin Device. . .${ILRESTORE}"
	sleep 1
	if [[ -d $DEVICE ]]; then
		echo "Garming device found. . ."
		echo
		sleep 1
		if [[ -f "$DEVICE"/Garmin/"$STATE"_latest_gmapsupp.img ]];then
			echo "${ILCOLOR1}Removing old map from device. . .${ILRESTORE}"
			rm -rf "$DEVICE"/Garmin/"$STATE"_latest_gmapsupp.img
			echo
			sleep 1
		fi
		echo "${ILCOLOR1}Copying new map to Garmin device. . .${ILRESTORE}"
		rsync --progress --verbose $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img /media/msifland/GARMIN/Garmin/"$STATE"-latest_gmapsupp.img
	else
		echo
		echo "${ILCOLOR1}No Garmin Device found. Copy manually later.${ILRESTORE}"
	fi
	# Cleaan up files only if a gmap image was created. Keep for troublshooting if .img was NOT created.
	echo
	echo "${ILCOLOR1}Cleaning up files. . .${ILRESTORE}"
	sleep 1
	rm -rf $HOME/maps/combine/*
	rm -rf $HOME/maps/downloads/*
else
		echo
		echo "${ILCOLOR1}No map file was created, check for errors...${ILRESTORE}"
fi
}

function us-west-build(){
# Create directories if they don't exist.
if [[ ! -d "$HOME/maps" ]]; then
	mkdir "$HOME/maps"
fi
if [[ ! -d "$HOME/maps/combine" ]]; then
	mkdir "$HOME/maps/combine"
else
	rm -rf $HOME/maps/combine/*
fi
if [[ ! -d "$HOME/maps/downloads" ]]; then
	mkdir "$HOME/maps/downloads"
else
	rm -rf $HOME/maps/downloads/*
fi
if [[ ! -d "$HOME/maps/completed_maps" ]]; then
	mkdir "$HOME/maps/completed_maps"
fi
cd $HOME/maps

echo
echo "Building us-west. . ."
STATE="us-west"
sleep 1

echo "Running with $TyP_FILE for Garmin Drive device which includes buildings. . ."
sleep 1

echo
echo "${ILCOLOR1}Starting process of downloading and building Garmin map of Geofarik maps:${ILRESTORE} "$STATE
sleep 1

URL="http://download.geofabrik.de/north-america/"
wget -O $HOME/maps/downloads/"$STATE"_latest.osm.pbf $URL/$STATE-latest.osm.pbf
cd $HOME/maps/combine

#This is with not converting to .o5m
mv $HOME/maps/downloads/"$STATE"_latest.osm.pbf $HOME/maps/combine/"$STATE"_latest.osm.pbf
java -jar $HOME/maps/splitter/splitter.jar $HOME/maps/combine/"$STATE"_latest.osm.pbf --max-nodes=800000 --output=xml

echo
echo "${ILCOLOR1}Creating img, this will take a while...${ILRESTORE}"
sleep 1
java -jar $HOME/maps/mkgmap/mkgmap.jar --style-file=$HOME/maps/styles/mine  --family-id=2000 --route --gmapsupp *.osm.gz $HOME/maps/"$TYP_FILE".typ

echo

if [[ -f $HOME/maps/combine/gmapsupp.img ]]; then
	echo
	echo "${ILCOLOR1}Moving gmapsupp.img to completed_maps folder and renaming to $STATE_gmapsupp.img...${ILRESTORE}"
	sleep 1
	if [[ -f $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old ]]; then
		rm -rf $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old
	fi
	if [[ -f "$HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img" ]]; then
		mv $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img.old
	fi
	mv $HOME/maps/combine/gmapsupp.img $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img
	sleep 1

	echo
	echo "${ILCOLOR1}Checking for Garmin Device. . .${ILRESTORE}"
	sleep 1
	if [[ -d $DEVICE ]]; then
		echo "Garming device found. . ."
		echo
		sleep 1
		if [[ -f "$DEVICE"/Garmin/"$STATE"_latest_gmapsupp.img ]];then
			echo "${ILCOLOR1}Removing old map from device. . .${ILRESTORE}"
			rm -rf "$DEVICE"/Garmin/"$STATE"_latest_gmapsupp.img
			echo
			sleep 1
		fi
		echo "${ILCOLOR1}Copying new map to Garmin device. . .${ILRESTORE}"
		rsync --progress --verbose $HOME/maps/completed_maps/"$STATE"_latest_gmapsupp.img /media/msifland/GARMIN/Garmin/"$STATE"-latest_gmapsupp.img
	else
		echo
		echo "${ILCOLOR1}No Garmin Device found. Copy manually later.${ILRESTORE}"
	fi
	# Cleaan up files only if a gmap image was created. Keep for troublshooting if .img was NOT created.
	echo
	echo "${ILCOLOR1}Cleaning up files. . .${ILRESTORE}"
	sleep 1
	rm -rf $HOME/maps/combine/*
	rm -rf $HOME/maps/downloads/*
else
		echo
		echo "${ILCOLOR1}No map file was created, check for errors...${ILRESTORE}"
fi
}

# Calling functions to build each area.
us-south-build
us-midwest-build
us-northeast-build
us-west-build

echo
echo "${ILCOLOR1}Finished."
sleep 1
echo "Build End Time:"
DATE=$(date +"%m-%d-%y")
echo "Date: $DATE"
TIME=$(date +"%r")
echo "Time: $TIME"
DATE_END=$(date +"%s")
DIFF=$(($DATE_END - $DATE_START))
echo "It took $(($DIFF / 3600 )) hours $((($DIFF % 3600) / 60)) minutes $(($DIFF % 60)) seconds to build."
echo -e "${RESTORE}"

cd $HOME
exit
