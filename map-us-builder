#!/bin/bash

# Dependencies: program mkgmap, osmium. Also a mkgmap, gmt, and mkgmap-splitter folder downloaded from source.
# Switching to map directory and display what maps we are downloading
DEVICE="/media/msifland/GARMIN"
function build_map(){
	shopt -u nocasematch
	### Log date and time
	echo -e ${ILCOLOR1}
	DATE_START=$(date +"%s")
	echo "Build Start Time:"
	DATE=$(date +"%m-%d-%y")
	echo "Date: $DATE"
	TIME=$(date +"%r")
	echo "Time: $TIME"
	echo -e ${ILRESTORE}

	echo
	echo "${ILCOLOR1}Downloading US Map from Geofabrik.com:"

	# Create directories if they don't exist.
	if [[ ! -d "$HOME/maps" ]]; then
		mkdir "$HOME/maps"
	fi
	if [[ ! -d "$HOME/maps/Combine" ]]; then
		mkdir "$HOME/maps/Combine"
	fi
	if [[ ! -d "$HOME/maps/downloads" ]]; then
		mkdir "$HOME/maps/downloads"
	else
		rm -rf $HOME/maps/downloads/*
	fi
	cd $HOME/maps

	# Downloading maps from geofabrik.
	echo
	echo "${ILCOLOR1}Downloading maps...${ILRESTORE}"
	sleep 1
	echo

	# Error handling variable for file size errors.
	FILE=""
	MINSZ=100000

	# South
	wget -O $HOME/maps/downloads/us_south_latest.osm.pbf http://download.geofabrik.de/north-america/us-south-latest.osm.pbf
	FILE="$HOME/maps/downloads/us_south_latest.osm.pbf"
	ACTSZ=$(wc -c <"$FILE")
	while [ $ACTSZ -lt $MINSZ ]; do
		wget -O $HOME/maps/downloads/us_south_latest.osm.pbf http://download.geofabrik.de/north-america/us-south-latest.osm.pbf
	done
	# Midwest
	wget -O $HOME/maps/downloads/us_midwest_latest.osm.pbf http://download.geofabrik.de/north-america/us-midwest-latest.osm.pbf
	FILE="$HOME/maps/downloads/us_midwest_latest.osm.pbf"
	ACTSZ=$(wc -c <"$FILE")
	while [ $ACTSZ -lt $MINSZ ]; do
		wget -O $HOME/maps/downloads/us_midwest_latest.osm.pbf http://download.geofabrik.de/north-america/us-midwest-latest.osm.pbf
	done
	# Northeast
	wget -O $HOME/maps/downloads/us_northeast_latest.osm.pbf http://download.geofabrik.de/north-america/us-northeast-latest.osm.pbf
	FILE="$HOME/maps/downloads/us_northeast_latest.osm.pbf"
	ACTSZ=$(wc -c <"$FILE")
	while [ $ACTSZ -lt $MINSZ ]; do
		wget -O $HOME/maps/downloads/us_northeast_latest.osm.pbf http://download.geofabrik.de/north-america/us-northeast-latest.osm.pbf
	done
	# West
	wget -O $HOME/maps/downloads/us_west_latest.osm.pbf http://download.geofabrik.de/north-america/us-west-latest.osm.pbf
	FILE="$HOME/maps/downloads/us_west_latest.osm.pbf"
	ACTSZ=$(wc -c <"$FILE")
	while [ $ACTSZ -lt $MINSZ ]; do
		wget -O $HOME/maps/downloads/us_west_latest.osm.pbf http://download.geofabrik.de/north-america/us-west-latest.osm.pbf
	done

# South
	cd $HOME/maps
# Build South
	# Formatting for faster and better processing.
	echo
	echo "${ILCOLOR1}Converting us_south_latest.osm.pbf file to .o5m for faster formatting using osmconvert...${ILRESTORE}"
	sleep 1
	osmconvert --drop-version $HOME/maps/downloads/us_south_latest.osm.pbf -o=$HOME/maps/Combine/us_south_latest.o5m
	cd $HOME/maps/Combine

	# Splitting the file with mkgmap program for managable conversion of size.
	echo
	echo "${ILCOLOR1}Splitting file...${ILRESTORE}"
	sleep 1
	mkgmap-splitter $HOME/maps/Combine/us_south_latest.o5m --max-nodes=800000 --output=xml
	# Different ways to run, messes up sometimes, these are run without the osmconver command above.
	#mkgmap-splitter $HOME/maps/Combine/us_south_latest.osm.pbf --max-threads=2 --max-nodes=800000 --output=xml
	#java -jar /home/msifland/maps/splitter-r592/splitter.jar $HOME/maps/Combine/us_south_latest.osm.pbf --max-nodes=800000 --output=xml

	# Re-combing all split files into one Garmin .img file.
	echo
	echo "${ILCOLOR1}Creating img, this will take a while...${ILRESTORE}"
	sleep 1
	mkgmap --style-file=$HOME/maps/styles/mine  --family-id=2000 --route --gmapsupp *.osm.gz $HOME/maps/my_custom.typ

	# Check for completed .img file and move to home/maps folder and the to Garmin device, if connected.
	if [[ -f $HOME/maps/Combine/gmapsupp.img ]]; then
		if [[ -f "$HOME/maps/us_south_latest_gmapsupp.img.old" ]]; then
			rm -rf $HOME/maps/us_south_latest_gmapsupp.img.old
		fi
		if [[ -f "$HOME/maps/us_south_latest_gmapsupp.img" ]]; then
			mv $HOME/maps/us_south_latest_gmapsupp.img $HOME/maps/us_south_latest_gmapsupp.img.old
		fi
		echo
		echo "${ILCOLOR1}Moving gmapsupp.img to Maps folder and renaming to us_south_gmapsupp.img...${ILRESTORE}"
		mv $HOME/maps/Combine/gmapsupp.img $HOME/maps/us_south_latest_gmapsupp.img
		sleep 1

		echo
		echo "${ILCOLOR1}Checking for Garmin Device. . .${ILRESTORE}"
		sleep 1
		if [[ -d "$DEVICE" ]]; then
			echo "Garming device found. . ."
			echo
			sleep 1
			if [[ -f "$DEVICE"/Garmin/us_south_latest_gmapsupp.img ]];then
				echo "${ILCOLOR1}Removing old map from device. . .${ILRESTORE}"
				rm -rf "$DEVICE"/Garmin/us_south_latest_gmapsupp.img
				echo
				sleep 1
			fi
			echo "${ILCOLOR1}Copying new map to Garmin device. . .${ILRESTORE}"
			rsync --progress --verbose $HOME/maps/us_south_latest_gmapsupp.img "$DEVICE"/Garmin/us_south_latest_gmapsupp.img
		else
			echo
			echo "${ILCOLOR1}No Garmin Device found. Copy manually later.${ILRESTORE}"
		fi
		sleep 1

		# Only clean up files if map.img was created successfully. 	Don't delete so a manual re-run can be done for error checking.
		echo
		echo "${ILCOLOR1}Cleaning up files...${ILRESTORE}"
		sleep 1
		rm -rf $HOME/maps/Combine/*
		rm -rf $HOME/maps/*.osm.pbf
	else
		echo
		echo "${ILCOLOR1}No map file was created, check for errors...${ILRESTORE}"
	fi

# Midwest
	cd $HOME/maps
# Build midwest
	# Formatting for faster and better processing.
	echo
	echo "${ILCOLOR1}Converting us_midwest_latest.osm.pbf file to .o5m for faster formatting using osmconvert...${ILRESTORE}"
	sleep 1
	osmconvert --drop-version $HOME/maps/downloads/us_midwest_latest.osm.pbf -o=$HOME/maps/Combine/us_midwest_latest.o5m
	cd $HOME/maps/Combine

	# Splitting the file with mkgmap program for managable conversion of size.
	echo
	echo "${ILCOLOR1}Splitting file...${ILRESTORE}"
	sleep 1
	mkgmap-splitter $HOME/maps/Combine/us_midwest_latest.o5m --max-nodes=800000 --output=xml
	# Different ways to run, messes up sometimes, these are run without the osmconver command above.
	#mkgmap-splitter $HOME/maps/Combine/us_midwest_latest.osm.pbf --max-threads=2 --max-nodes=800000 --output=xml
	#java -jar /home/msifland/maps/splitter-r592/splitter.jar $HOME/maps/Combine/us_midwest_latest.osm.pbf --max-nodes=800000 --output=xml

	# Re-combing all split files into one Garmin .img file.
	echo
	echo "${ILCOLOR1}Creating img, this will take a while...${ILRESTORE}"
	sleep 1
	mkgmap --style-file=$HOME/maps/styles/mine  --family-id=2000 --route --gmapsupp *.osm.gz $HOME/maps/my_custom.typ

	# Check for completed .img file and move to home/maps folder and the to Garmin device, if connected.
	if [[ -f $HOME/maps/Combine/gmapsupp.img ]]; then
		if [[ -f "$HOME/maps/us_midwest_latest_gmapsupp.img.old" ]]; then
			rm -rf $HOME/maps/us_midwest_latest_gmapsupp.img.old
		fi
		if [[ -f "$HOME/maps/us_midwest_latest_gmapsupp.img" ]]; then
			mv $HOME/maps/us_midwest_latest_gmapsupp.img $HOME/maps/us_midwest_latest_gmapsupp.img.old
		fi
		echo
		echo "${ILCOLOR1}Moving gmapsupp.img to Maps folder and renaming to us_midwest_gmapsupp.img...${ILRESTORE}"
		mv $HOME/maps/Combine/gmapsupp.img $HOME/maps/us_midwest_latest_gmapsupp.img
		sleep 1

		echo
		echo "${ILCOLOR1}Checking for Garmin Device. . .${ILRESTORE}"
		sleep 1
		if [[ -d "$DEVICE" ]]; then
			echo "Garming device found. . ."
			echo
			sleep 1
			if [[ -f "$DEVICE"/Garmin/us_midwest_latest_gmapsupp.img ]];then
				echo "${ILCOLOR1}Removing old map from device. . .${ILRESTORE}"
				rm -rf "$DEVICE"/Garmin/us_midwest_latest_gmapsupp.img
				echo
				sleep 1
			fi
			echo "${ILCOLOR1}Copying new map to Garmin device. . .${ILRESTORE}"
			rsync --progress --verbose $HOME/maps/us_midwest_latest_gmapsupp.img "$DEVICE"/Garmin/us_midwest_latest_gmapsupp.img
		else
			echo
			echo "${ILCOLOR1}No Garmin Device found. Copy manually later.${ILRESTORE}"
		fi
		sleep 1

		# Only clean up files if map.img was created successfully. 	Don't delete so a manual re-run can be done for error checking.
		echo
		echo "${ILCOLOR1}Cleaning up files...${ILRESTORE}"
		sleep 1
		rm -rf $HOME/maps/Combine/*
		rm -rf $HOME/maps/*.osm.pbf
	else
		echo
		echo "${ILCOLOR1}No map file was created, check for errors...${ILRESTORE}"
	fi

# Northeast
	cd $HOME/maps
# Build northeast
	# Formatting for faster and better processing.
	echo
	echo "${ILCOLOR1}Converting us_northeast_latest.osm.pbf file to .o5m for faster formatting using osmconvert...${ILRESTORE}"
	sleep 1
	osmconvert --drop-version $HOME/maps/downloads/us_northeast_latest.osm.pbf -o=$HOME/maps/Combine/us_northeast_latest.o5m
	cd $HOME/maps/Combine

	# Splitting the file with mkgmap program for managable conversion of size.
	echo
	echo "${ILCOLOR1}Splitting file...${ILRESTORE}"
	sleep 1
	mkgmap-splitter $HOME/maps/Combine/us_northeast_latest.o5m --max-nodes=800000 --output=xml
	# Different ways to run, messes up sometimes, these are run without the osmconver command above.
	#mkgmap-splitter $HOME/maps/Combine/us_northeast_latest.osm.pbf --max-threads=2 --max-nodes=800000 --output=xml
	#java -jar /home/msifland/maps/splitter-r592/splitter.jar $HOME/maps/Combine/us_northeast_latest.osm.pbf --max-nodes=800000 --output=xml

	# Re-combing all split files into one Garmin .img file.
	echo
	echo "${ILCOLOR1}Creating img, this will take a while...${ILRESTORE}"
	sleep 1
	mkgmap --style-file=$HOME/maps/styles/mine  --family-id=2000 --route --gmapsupp *.osm.gz $HOME/maps/my_custom.typ

	# Check for completed .img file and move to home/maps folder and the to Garmin device, if connected.
	if [[ -f $HOME/maps/Combine/gmapsupp.img ]]; then
		if [[ -f "$HOME/maps/us_northeast_latest_gmapsupp.img.old" ]]; then
			rm -rf $HOME/maps/us_northeast_latest_gmapsupp.img.old
		fi
		if [[ -f "$HOME/maps/us_northeast_latest_gmapsupp.img" ]]; then
			mv $HOME/maps/us_northeast_latest_gmapsupp.img $HOME/maps/us_northeast_latest_gmapsupp.img.old
		fi
		echo
		echo "${ILCOLOR1}Moving gmapsupp.img to Maps folder and renaming to us_northeast_gmapsupp.img...${ILRESTORE}"
		mv $HOME/maps/Combine/gmapsupp.img $HOME/maps/us_northeast_latest_gmapsupp.img
		sleep 1

		echo
		echo "${ILCOLOR1}Checking for Garmin Device. . .${ILRESTORE}"
		sleep 1
		if [[ -d "$DEVICE" ]]; then
			echo "Garming device found. . ."
			echo
			sleep 1
			if [[ -f "$DEVICE"/Garmin/us_northeast_latest_gmapsupp.img ]];then
				echo "${ILCOLOR1}Removing old map from device. . .${ILRESTORE}"
				rm -rf "$DEVICE"/Garmin/us_northeast_latest_gmapsupp.img
				echo
				sleep 1
			fi
			echo "${ILCOLOR1}Copying new map to Garmin device. . .${ILRESTORE}"
			rsync --progress --verbose $HOME/maps/us_northeast_latest_gmapsupp.img "$DEVICE"/Garmin/us_northeast_latest_gmapsupp.img
		else
			echo
			echo "${ILCOLOR1}No Garmin Device found. Copy manually later.${ILRESTORE}"
		fi
		sleep 1

		# Only clean up files if map.img was created successfully. 	Don't delete so a manual re-run can be done for error checking.
		echo
		echo "${ILCOLOR1}Cleaning up files...${ILRESTORE}"
		sleep 1
		rm -rf $HOME/maps/Combine/*
		rm -rf $HOME/maps/*.osm.pbf
	else
		echo
		echo "${ILCOLOR1}No map file was created, check for errors...${ILRESTORE}"
	fi

# West
	cd $HOME/maps
# Build west
	# Formatting for faster and better processing.
	echo
	echo "${ILCOLOR1}Converting us_west_latest.osm.pbf file to .o5m for faster formatting using osmconvert...${ILRESTORE}"
	sleep 1
	osmconvert --drop-version $HOME/maps/downloads/us_west_latest.osm.pbf -o=$HOME/maps/Combine/us_west_latest.o5m
	cd $HOME/maps/Combine

	# Splitting the file with mkgmap program for managable conversion of size.
	echo
	echo "${ILCOLOR1}Splitting file...${ILRESTORE}"
	sleep 1
	mkgmap-splitter $HOME/maps/Combine/us_west_latest.o5m --max-nodes=800000 --output=xml
	# Different ways to run, messes up sometimes, these are run without the osmconver command above.
	#mkgmap-splitter $HOME/maps/Combine/us_west_latest.osm.pbf --max-threads=2 --max-nodes=800000 --output=xml
	#java -jar /home/msifland/maps/splitter-r592/splitter.jar $HOME/maps/Combine/us_west_latest.osm.pbf --max-nodes=800000 --output=xml

	# Re-combing all split files into one Garmin .img file.
	echo
	echo "${ILCOLOR1}Creating img, this will take a while...${ILRESTORE}"
	sleep 1
	mkgmap --style-file=$HOME/maps/styles/mine  --family-id=2000 --route --gmapsupp *.osm.gz $HOME/maps/my_custom.typ

	# Check for completed .img file and move to home/maps folder and the to Garmin device, if connected.
	if [[ -f $HOME/maps/Combine/gmapsupp.img ]]; then
		if [[ -f "$HOME/maps/us_west_latest_gmapsupp.img.old" ]]; then
			rm -rf $HOME/maps/us_west_latest_gmapsupp.img.old
		fi
		if [[ -f "$HOME/maps/us_west_latest_gmapsupp.img" ]]; then
			mv $HOME/maps/us_west_latest_gmapsupp.img $HOME/maps/us_west_latest_gmapsupp.img.old
		fi
		echo
		echo "${ILCOLOR1}Moving gmapsupp.img to Maps folder and renaming to us_west_gmapsupp.img...${ILRESTORE}"
		mv $HOME/maps/Combine/gmapsupp.img $HOME/maps/us_west_latest_gmapsupp.img
		sleep 1

		echo
		echo "${ILCOLOR1}Checking for Garmin Device. . .${ILRESTORE}"
		sleep 1
		if [[ -d "$DEVICE" ]]; then
			echo "Garming device found. . ."
			echo
			sleep 1
			if [[ -f "$DEVICE"/Garmin/us_west_latest_gmapsupp.img ]];then
				echo "${ILCOLOR1}Removing old map from device. . .${ILRESTORE}"
				rm -rf "$DEVICE"/Garmin/us_west_latest_gmapsupp.img
				echo
				sleep 1
			fi
			echo "${ILCOLOR1}Copying new map to Garmin device. . .${ILRESTORE}"
			rsync --progress --verbose $HOME/maps/us_west_latest_gmapsupp.img "$DEVICE"/Garmin/us_west_latest_gmapsupp.img
		else
			echo
			echo "${ILCOLOR1}No Garmin Device found. Copy manually later.${ILRESTORE}"
		fi
		sleep 1

		# Only clean up files if map.img was created successfully. 	Don't delete so a manual re-run can be done for error checking.
		echo
		echo "${ILCOLOR1}Cleaning up files...${ILRESTORE}"
		sleep 1
		rm -rf $HOME/maps/Combine/*
		rm -rf $HOME/maps/*.osm.pbf
	else
		echo
		echo "${ILCOLOR1}No map file was created, check for errors...${ILRESTORE}"
	fi

	echo
	echo "${ILCOLOR1}Finished."
	sleep 1
	echo "Build End Time:"
	DATE=$(date +"%m-%d-%y")
	echo "Date: $DATE"
	TIME=$(date +"%r")
	echo "Time: $TIME"
	DATE_END=$(date +"%s")
	DIFF=$(($DATE_END - $DATE_START))
	echo "It took $(($DIFF / 3600 )) hours $((($DIFF % 3600) / 60)) minutes $(($DIFF % 60)) seconds to build."
	echo -e "${ILRESTORE}"

	cd $HOME
	exit
}
<<Comment
function garmin_check(){
	shopt -s nocasematch
	sleep 1
	if [[ -d "/"$DEVICE"" ]]; then
		echo "Garmin device found. . ."
		echo
		sleep 1
		# Call build function.
		build_map
	else
		if [[ ! "$chck" = "b" ]]; then
			read -t 10 -p "No Garmin device found, checking again in 10 seconds. [B] for bypass. . . " chck; echo
			# Loop back to this function when no device found.
			garmin_check
		else
			echo
			echo "Ok, bypassing device check. . ."
			sleep 1
			# Call build function.
			build_map
		fi
	fi
}
Comment

########## Start Process #############
# Check if device is connected and don't run until it is, unless 'b' is typed for bypass.
echo
echo "Running My US Map Builder for Garmin devices. . ."
sleep 1
echo
#echo "Checking if Garmin device is connected. . ."
#sleep 1
#echo 
#chck=""

# Call check function.
#garmin_check
build_map
